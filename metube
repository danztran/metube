#!/bin/zsh
: ${YOUTUBE_DL_PATH:="yt-dlp"}
alias youtube-dl="$YOUTUBE_DL_PATH"

main() {
	eval "$@"
}

download() {
	local src_file="$1"
	local dist="$2"
	[ -z "$dist" ] && dist="dist"
	local tmpdir="/tmp/metube"
	mkdir -p $tmpdir

	# store current status
	snap $dist > "$tmpdir/snapold"

	cat $src_file | while read src
	do
		local playlist=`echo $src | awk -F , '{print $1}'`
		local link=`echo $src | awk -F , '{print $2}'`
		echo \> playlist $playlist - link $link
		mkdir -p "$dist" "$dist/$playlist"
		youtube-dl -cix \
			--download-archive "$dist/$playlist/.archive" \
			-S ext \
			--audio-format m4a \
			--add-metadata \
			--parse-metadata "title:%(title)s" \
			--ppa "Metadata:-metadata Album=$playlist -metadata Genre=$playlist" \
			--embed-thumbnail \
			--convert-thumbnails jpg \
			-o "$dist/$playlist/%(title)s.%(ext)s" \
			"$link"
	done

	# store new status
	snap $dist > "$tmpdir/snapnew"
	snapdiff $dist
}

remotediff() {
	IFS=$'\n'
	local dist="$1"
	local songs=( $(find -L $dist -type f -name '*.mp3') )

	echo ---
	for song in ${songs[@]}; do
		local url=$(ffmpeg -i "$song" -f null /dev/null 2>&1 | grep -E '\s*purl.*https://' | head -n 1 | awk -F ': ' '{print $2}')
		youtube-dl --skip-download --get-title "$url" >/dev/null || echo "$song\n"
	done
}

archivediff() {
	IFS=$'\n'
	local dist="$1"
	local archives=( $(find -L $dist -type f -name '.archive') )

	for archive in ${archives[@]}; do
		echo --- $archive

		local dir=$(dirname $archive)
		local songs=( $(find -L $dir -type f -name '*.mp3') )
		local list=$(cat $archive)
		for song in ${songs[@]}; do
		  # echo $yt_id: $song
			local yt_id=$(ffmpeg -i "$song" -f null /dev/null 2>&1 | grep -E '\s*purl.*https://' | head -n 1 | awk -F '?v=' '{print $2}')
			local found=$(echo $list | grep -- "$yt_id")
			[ -z $found ] && echo $yt_id: $song
		done
	done
	echo "mission accomplished!"
}

snapdiff() {
	local dist="$1"
	local ts=`date '+%F %H:%M:%S'`
	local changes=$(git diff --no-index "$tmpdir/snapold" "$tmpdir/snapnew" 2>&1 | grep -E '^(\+[^\+]{2}|\-[^\-]{2})')
	: ${changes:="Already up to date."}
	echo "---$ts---\n$changes" | tee -a "$dist/CHANGELOG"
}

snap() {
	local dist="$1"
	find -L $dist -type f -name '*.mp3' | sed "s|^$dist/||"
}

logvar() {
	for var in $@; do
		echo "$var = ${(P)var}"
	done
}

search() {
	IFS=$'\n'
	local dist="$1"
	local pattern="$2"
	local songs=( $(find -L $dist -type f -name '*.mp3') )

	logvar dist pattern

	echo ---
	for song in ${songs[@]}; do
		local info=$(ffmpeg -i "$song" -hide_banner -f null /dev/null 2>&1 | grep -E "$pattern")
		[ -n "$info" ] && echo found ${song/~/\~} && return
	done
}

gen() {
	local audio="$1"
	local video="$2"
	logvar audio video
	ffmpeg -loop 1 -i image.jpg -i "$audio" -shortest -c:v libx264 -c:a copy "$video"
}

install() {
	brew install $YOUTUBE_DL_PATH ffmpeg
}

main $@
